server.port = 8060
server.servlet.context-path=/ecom


#Database
spring.datasource.url= jdbc:mysql://localhost:3306/kafka_order
spring.datasource.username=root
spring.datasource.password=000Deep@213
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.show_sql=false


#kafka

kafka.new.order.topic=neworders
bootstrap.servers=192.168.97.11:9092
#try resending at max 3 times
retries=3
#key serializer
key.serializer=org.apache.kafka.common.serialization.StringSerializer
#value serializer (fully qualified classname)
value.serializer=com.ecommerce.orderService.config.OrderSerializer
acks=all
session.timeout.ms=45000


spring.cloud.stream.kafka.binder.brokers=192.168.97.11:9092
spring.cloud.function.definition=ordersCountByKeyInWindow;totalSale

spring.cloud.stream.bindings.totalSale-in-0.destination=neworders
spring.cloud.stream.bindings.totalSale-out-0.destination=total-sale-daywise
spring.cloud.stream.kafka.streams.bindings.totalSale-in-0.consumer.configuration.applicationId=orderService
#spring.cloud.stream.kafka.streams.bindings.totalSale-in-0.consumer.valueSerde=com.ecommerce.orderService.config.OrderDeserializer
